{"version":3,"file":"js/app.1812773f.js","mappings":"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","sources":["webpack://dnd/./src/components/CharacterForm1.vue","webpack://dnd/./src/components/CharacterForm1.vue?1d1e","webpack://dnd/./src/api/enum.js","webpack://dnd/./src/api/skills.js","webpack://dnd/./src/store/module/utils.js","webpack://dnd/./src/api/typeNew.js","webpack://dnd/./src/api/models/class.js","webpack://dnd/./src/api/models/race.js","webpack://dnd/./src/api/utils.js","webpack://dnd/./src/components/CharacterFile.vue","webpack://dnd/./src/components/CharacterFile.vue?4f7a","webpack://dnd/./src/components/SubChoice.vue","webpack://dnd/./src/components/SubChoice.vue?b63d","webpack://dnd/./src/components/FormController.vue","webpack://dnd/./src/components/FormController.vue?4c8e","webpack://dnd/./src/components/CharacterForm2.vue","webpack://dnd/./src/components/CharacterForm2.vue?66b3","webpack://dnd/./src/store/module/characterForm1.js","webpack://dnd/./src/store/module/form2.js","webpack://dnd/./src/store/module/characterState.js","webpack://dnd/./src/api/models/background.js","webpack://dnd/./src/store/module/form4.js","webpack://dnd/./src/store/module/form3.js","webpack://dnd/./src/store/index.js","webpack://dnd/./src/components/form3/SimplifiedForm.vue","webpack://dnd/./src/components/form3/SimplifiedForm.vue?d85b","webpack://dnd/./src/components/form3/FreeForm.vue","webpack://dnd/./src/components/form3/FreeForm.vue?d737","webpack://dnd/./src/components/CharacterForm3.vue","webpack://dnd/./src/components/CharacterForm3.vue?a824","webpack://dnd/./src/components/CharacterForm4.vue","webpack://dnd/./src/components/CharacterForm4.vue?409b","webpack://dnd/./src/App.vue","webpack://dnd/./src/App.vue?7ccd","webpack://dnd/./src/main.js","webpack://dnd/webpack/bootstrap","webpack://dnd/webpack/runtime/chunk loaded","webpack://dnd/webpack/runtime/compat get default export","webpack://dnd/webpack/runtime/define property getters","webpack://dnd/webpack/runtime/global","webpack://dnd/webpack/runtime/hasOwnProperty shorthand","webpack://dnd/webpack/runtime/publicPath","webpack://dnd/webpack/runtime/jsonp chunk loading","webpack://dnd/webpack/startup"],"sourcesContent":["<template>\n    <form @submit.prevent=\"next\">\n        <div class=\"mb-3\">\n            <label class=\"form-label\" for=\"characterName\">Nom du personnage</label>\n            <input class=\"form-control\" type=\"text\" id=\"characterName\" name=\"characterName\" @input=\"updateCharacterName\" :value=\"characterName\">\n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\" for=\"characterName\">Nom du joueur</label>\n            <input class=\"form-control\" type=\"text\" id=\"playerName\" name=\"playerName\" @input=\"updatePlayerName\" :value=\"playerName\">\n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\" for=\"alignment\">Alignement</label>\n            <select class=\"form-select\" name=\"alignment\" id=\"alignment\" @change=\"updateAlignment\" :value=\"alignment\">\n                <option value=\"\">Choisir un alignment</option>\n                <option value=\"Loyal Bon\">Loyal Bon</option>\n                <option value=\"Neutre Bon\">Neutre Bon</option>\n                <option value=\"Chaotique Bon\">Chaotique Bon</option>\n                <option value=\"Loyal Neutre\">Loyal Neutre</option>\n                <option value=\"Neutre\">Neutre</option>\n                <option value=\"Chaotique Neutre\">Chaotique Neutre</option>\n                <option value=\"Loyal Mauvais\">Loyal Mauvais</option>\n                <option value=\"Neutre Mauvais\">Neutre Mauvais</option>\n                <option value=\"Chaotique Mauvais\">Chaotique Mauvais</option>\n            </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n</template>\n\n<script setup>\nimport { computed , defineEmits} from 'vue'\nimport { useStore } from 'vuex'\nconst store = useStore();\n\nconst emit = defineEmits(['next'])\nconst next = () => emit('next')\n\nconst characterName = computed(() => store.getters['characterForm1/characterName'])\nconst updateCharacterName = (event) => \n    store.commit('characterForm1/setCharacterName', event.target.value)\n\nconst playerName = computed(() => store.getters['characterForm1/playerName'])\nconst updatePlayerName = (event) => \n    store.commit('characterForm1/setPlayerName', event.target.value)\n\nconst alignment = computed(() => store.getters['characterForm1/alignment'])\nconst updateAlignment = (event) => \n    store.commit('characterForm1/setAlignment', event.target.value)\n    \n</script>","import script from \"./CharacterForm1.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CharacterForm1.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","const CARACTERISTICS_KEY = \"abilities\"\nconst ATTRIBUTES_KEY = \"attributes\"\nconst SUB_RACE_KEY = \"subRace\"\nconst SKILLS_KEY = \"skills\"\nconst TRAITS_KEY = \"features\"\nconst LANGUAGES_KEY = \"languages\"\nconst SPELLS_KEY = \"spells\"\nconst MAITRISES_KEY = \"masterings\"\nconst ITEMS_KEY = \"items\"\nconst SAVE_KEY = \"saves\"\n\nconst ATTRIBUTES_KEYS = {\n    CA : \"ca\",\n    INIT : \"init\",\n    SPEED : \"speed\",\n    LIFE : \"life\",\n    TEMP_LIFE : \"tempLife\",\n    LIFE_DICE : \"hitDice\",\n    BONUS_MAITRISE : \"masteringBonus\",\n}\n\nconst CARACTERISTICS = {\n    FOR : \"str\",\n    DEX : \"dex\",\n    CON : \"con\",\n    INT : \"int\",\n    SAG : \"wis\",\n    CHA : \"cha\",\n}\nconst ATTRIBUTES = {\n    CA : \"ca\",\n    INIT : \"init\",\n    SPEED : \"speed\",\n    LIFE : \"life\",\n    TEMP_LIFE : \"tempLife\",\n    HIT_DICE : \"hitDice\",\n}\n\n\nconst SKILLS  = {\n    ACROBATICS : \"acrobatics\",\n    ANIMAL_HANDLING : \"animal_handling\",\n    ARCANA : \"arcana\",\n    ATHLETICS : \"athletics\",\n    DECEPTION : \"deception\",\n    HISTORY : \"history\",\n    INSIGHT : \"insight\",\n    INTIMIDATION : \"intimidation\",\n    INVESTIGATION : \"investigation\",\n    MEDICINE : \"medicine\",\n    NATURE : \"nature\",\n    PERCEPTION : \"perception\",\n    PERFORMANCE : \"performance\",\n    PERSUASION : \"persuasion\",\n    RELIGION : \"religion\",\n    SLEIGHT_OF_HAND : \"sleight_of_hand\",\n    STEALTH : \"stealth\",\n    SURVIVAL : \"survival\"  \n}\n\nconst SKILLS_ABILITIES = {\n    [SKILLS.ACROBATICS] : \"dex\",\n    [SKILLS.ANIMAL_HANDLING] : \"wis\",\n    [SKILLS.ARCANA] : \"int\",\n    [SKILLS.ATHLETICS] : \"str\",\n    [SKILLS.DECEPTION] : \"cha\",\n    [SKILLS.HISTORY] : \"int\",\n    [SKILLS.INSIGHT] : \"wis\",\n    [SKILLS.INTIMIDATION] : \"cha\",\n    [SKILLS.INVESTIGATION] : \"int\",\n    [SKILLS.MEDICINE] : \"wis\",\n    [SKILLS.NATURE] : \"int\",\n    [SKILLS.PERCEPTION] : \"wis\",\n    [SKILLS.PERFORMANCE] : \"cha\",\n    [SKILLS.PERSUASION] : \"cha\",\n    [SKILLS.RELIGION] : \"int\",\n    [SKILLS.SLEIGHT_OF_HAND] : \"dex\",\n    [SKILLS.STEALTH] : \"dex\",\n    [SKILLS.SURVIVAL] : \"wis\"\n}\n\nexport default {\n    CARACTERISTICS_KEY,\n    ATTRIBUTES_KEY,\n    CARACTERISTICS,\n    ATTRIBUTES,\n    SUB_RACE_KEY,\n    SKILLS_KEY,\n    ATTRIBUTES_KEYS,\n    TRAITS_KEY,\n    LANGUAGES_KEY,\n    SPELLS_KEY,\n    MAITRISES_KEY,\n    ITEMS_KEY,\n    SAVE_KEY,\n    SKILLS,\n    SKILLS_ABILITIES\n}","import skills from '@/assets/skills.json'\n\nfunction getSkills() {\n    return skills;\n}\n\nfunction getSkillIdByName(name) {\n    let skill = Object.entries(skills).find(skill => {\n        console.log(\"getSkillIdByName\", skill);\n        return skill[1].name == name\n    })\n    return skill[0]\n}\n\nfunction getCaracteristic(skillId) {\n    return skills[skillId].caracteristic\n}\n\nexport default {\n    getSkills,\n    getSkillIdByName,\n    getCaracteristic,\n}","import ENUM from '@/api/enum'\nimport { Element, Quantity } from '@/api/type'\n/* eslint-disable no-unused-vars */\nimport { Choices } from '@/api/typeNew'\n\nexport function converter(choices) {\n    const convertedValues = {\n        [ENUM.LANGUAGES_KEY]: Element,\n        [ENUM.ITEMS_KEY]: Element,\n        [ENUM.SKILLS_KEY]: Element,\n        [ENUM.SPELLS_KEY]: Element,\n        [ENUM.TRAITS_KEY]: Element,\n    }\n    const convetedChoices = {}\n    for (let choice in choices) {\n        choices[choice].forEach(value => {\n            const associatedClass = convertedValues[choice.split('-')[0]]\n            if (!convetedChoices[choice]) {\n                convetedChoices[choice] = []\n            }\n            if (associatedClass === Element) {\n                convetedChoices[choice].push(new Element(value))\n            } else if (associatedClass === Quantity) {\n                convetedChoices[choice].push(new Quantity(value, 1))\n            }\n        })\n    }\n    return convetedChoices;\n}\n\nexport const MODE = {\n    ADD: \"add\", SUB: \"sub\"\n}\n\n/**\n * \n * @param {*} context \n * @param {Choices} convertedChoices \n * @param {*} mode \n */\nexport function applyChoices(context, convertedChoices, mode) {\n    // for (let choice in convertedChoices) {\n    //     if (convertedChoices[choice].length > 0) {\n    //         if (convertedChoices[choice][0] instanceof Element) {\n    //             let storeRoot;\n    //             if (mode === MODE.SUB) {    \n    //                 storeRoot = 'characterState/subElements'\n    //             } else if (mode === MODE.ADD) {\n    //                 storeRoot = 'characterState/addElements'\n    //             }\n    //             context.commit(storeRoot, \n    //             {property: choice.split('-')[0], items: convertedChoices[choice]}, \n    //             {root: true})\n    //         } else if (convertedChoices[choice][0] instanceof Quantity) {\n    //             let storeRoot;\n    //             if (mode === MODE.SUB) {    \n    //                 storeRoot = 'characterState/subQuantities'\n    //             } else if (mode === MODE.ADD) {\n    //                 storeRoot = 'characterState/addQuantities'\n    //             }\n    //             context.commit(storeRoot, \n    //             {property: choice.split('-')[0], items: convertedChoices[choice]}, \n    //             {root: true})\n    //         }   \n    //     }\n    // }\n\n    for (let choice in convertedChoices) {\n        convertedChoices[choice].forEach(value => {\n            if (value.values.length > 0) {\n                if (value.values[0] instanceof Element) {\n                    let storeRoot;\n                    if (mode === MODE.SUB) {\n                        storeRoot = 'characterState/subElements'\n                    } else if (mode === MODE.ADD) {\n                        storeRoot = 'characterState/addElements'\n                    }\n                    context.commit(storeRoot,\n                        { property: choice, items: convertedChoices[choice] },\n                        { root: true })\n                } else if (value.values[0] instanceof Quantity) {\n                    let storeRoot;\n                    if (mode === MODE.SUB) {\n                        storeRoot = 'characterState/subQuantities'\n                    } else if (mode === MODE.ADD) {\n                        storeRoot = 'characterState/addQuantities'\n                    }\n                    context.commit(storeRoot,\n                        { property: choice, items: convertedChoices[choice] },\n                        { root: true })\n                }\n            }\n        })\n    }\n}\n","import { MODE } from '@/store/module/utils.js'\n\nexport class Element {\n    constructor(name) {\n        this.name = name;\n    }\n}\n\nexport class Quantity {\n    constructor(name, quantity) {\n        this.name = name;\n        this.quantity = quantity;\n    }\n}\n\nexport class Choice {\n    constructor(id, values, number) {\n        this.id = id;\n        this.values = values;\n        this.number = number;\n    }\n}\n\nexport class Choices {\n    /**\n     * \n     * @param {Choice[]} skills \n     * @param {Choice[]} items \n     * @param {Choice[]} subClass \n     * @param {Choice[]} languages \n     */\n    constructor(skills, items, subClass, languages, subRace) {\n        this.skills = skills;\n        this.items = items;\n        this.subClass = subClass;\n        this.languages = languages;\n        this.subRace = subRace;\n    }\n\n    getBlanked() {\n        return new Choices(\n            this.skills.map(s => new Choice(s.id, [], s.number)),\n            this.items.map(s => new Choice(s.id, [], s.number)),\n            this.subClass.map(s => new Choice(s.id, [], s.number)),\n            this.languages.map(s => new Choice(s.id, [], s.number)),\n            this.subRace.map(s => new Choice(s.id, [], s.number))\n        );\n    }\n\n    digest(context, mode) {\n        for (let p in this) {\n            for (let sp in this[p]) {\n                const values = this[p][sp].values\n                if (values.length > 0 && values[0] instanceof Element) {\n                    if (mode === MODE.ADD)\n                        context.commit('characterState/addElements', { property: p, items: values }, { root: true })\n                    else if (mode === MODE.SUB)\n                        context.commit('characterState/subElements', { property: p, items: values }, { root: true })\n                }\n                if (values.length > 0 && values[0] instanceof Quantity) {\n                    if (mode === MODE.ADD)\n                        context.commit('characterState/addQuantities', { property: p, items: values }, { root: true })\n                    else if (mode === MODE.SUB)\n                        context.commit('characterState/subQuantities', { property: p, items: values }, { root: true })\n                }\n                if (values.length > 0 && values[0] instanceof MetaChoice) {\n                    if (mode === MODE.ADD)\n                        values.forEach(v => v.digest(context, MODE.ADD))\n                    else if (mode === MODE.SUB)\n                        values.forEach(v => v.digest(context, MODE.SUB))\n                }\n            }\n        }\n    }\n\n    static fromJson(json) {\n        const skills = 'skills' in json ? json.skills.map(s => new Choice(s.id, s.values.map(v => new Quantity(v.name, v.quantity)), s.number)) : []\n        const items = 'items' in json ? json.items.map(s => new Choice(s.id, s.values.map(v => new Element(v.name)), s.number)) : []\n        const subClass = 'subClass' in json ? json.subClass.map(s => new Choice(s.id, s.values.map(v => new Element(v.name)), s.number)) : []\n        const languages = 'languages' in json ? json.languages.map(s => new Choice(s.id, s.values.map(v => new Element(v.name)), s.number)) : []\n        const subRace = 'subRace' in json ? json.subRace.map(s => new Choice(s.id, s.values.map(v => SubRace.fromJson(v)), s.number)) : []\n        return new Choices(\n            skills, items, subClass, languages, subRace\n        );\n    }\n}\n\n// const digestMetachoice = (context, metachoice, mode) => {\n//     for (let p in metachoice) {\n//         if (metachoice[p] instanceof Element) {\n//             if (mode === MODE.ADD) \n//                 context.commit('characterState/addElements', {property: p, items: [metachoice[p]]}, {root: true})\n//             else if (mode === MODE.SUB)\n//                 context.commit('characterState/subElements', {property: p, items: [metachoice[p]]}, {root: true})\n//         }\n//         if (metachoice[p] instanceof Quantity) {\n//             if (mode === MODE.ADD) \n//                 context.commit('characterState/addQuantities', {property: p, items: [metachoice[p]]}, {root: true})\n//             else if (mode === MODE.SUB)\n//                 context.commit('characterState/subQuantities', {property: p, items: [metachoice[p]]}, {root: true})\n//         }\n//         if (Array.isArray(metachoice[p] ) && metachoice[p].length > 0 && metachoice[p][0] instanceof Element) {\n//             if (mode === MODE.ADD) \n//                 context.commit('characterState/addElements', {property: p, items: metachoice[p]}, {root: true})\n//             else if (mode === MODE.SUB)\n//                 context.commit('characterState/subElements', {property: p, items: metachoice[p]}, {root: true})\n//         }\n//         if (Array.isArray(metachoice[p]) && metachoice[p].length > 0 && metachoice[p][0] instanceof Quantity) {\n//             if (mode === MODE.ADD) \n//                 context.commit('characterState/addQuantities', {property: p, items: metachoice[p]}, {root: true})\n//             else if (mode === MODE.SUB)\n//                 context.commit('characterState/subQuantities', {property: p, items: metachoice[p]}, {root: true})\n//         }\n//     }\n// }\n\n// const digestMetachoiceChoices = (context, metachoiceChoices, mode) => {\n//     for (let p in metachoiceChoices) {\n//         for (let sp in metachoiceChoices[p]) {\n//             const values = metachoiceChoices[p][sp].values\n//             if (values.length > 0 && values[0] instanceof Element) {\n//                 if (mode === MODE.ADD) \n//                     context.commit('characterState/addElements', {property: p, items: values}, {root: true})\n//                 else if (mode === MODE.SUB)\n//                     context.commit('characterState/subElements', {property: p, items: values}, {root: true})\n//             }\n//             if (values.length > 0 && values[0] instanceof Quantity) {\n//                 if (mode === MODE.ADD) \n//                     context.commit('characterState/addQuantities', {property: p, items: values}, {root: true})\n//                 else if (mode === MODE.SUB)\n//                     context.commit('characterState/subQuantities', {property: p, items: values}, {root: true})\n//             }\n//         }\n//     }\n// }\n\nclass MetaChoice {\n    /**\n     * \n     * @param {string} name \n     * @param {Quantity[]} attributes \n     * @param {Element[]} masterings \n     * @param {Element[]} saves \n     * @param {Element[]} features \n     * @param {Element[]} items\n     * @param {Quantity[]} skills\n     * @param {Choices} choices \n     */\n    constructor(key, name, attributes, masterings, saves, features, items, skills, choices, abilities, spells) {\n        this.key = key;\n        this.name = name;\n        this.attributes = attributes;\n        this.masterings = masterings;\n        this.saves = saves;\n        this.features = features;\n        this.items = items;\n        this.skills = skills;\n        this.choices = choices;\n        this.abilities = abilities;\n        this.spells = spells;\n    }\n\n    digest(context, mode) {\n        for (let p in this) {\n            if (this[p] instanceof Element) {\n                if (mode === MODE.ADD)\n                    context.commit('characterState/addElements', { property: p, items: [this[p]] }, { root: true })\n                else if (mode === MODE.SUB)\n                    context.commit('characterState/subElements', { property: p, items: [this[p]] }, { root: true })\n            }\n            if (this[p] instanceof Quantity) {\n                if (mode === MODE.ADD)\n                    context.commit('characterState/addQuantities', { property: p, items: [this[p]] }, { root: true })\n                else if (mode === MODE.SUB)\n                    context.commit('characterState/subQuantities', { property: p, items: [this[p]] }, { root: true })\n            }\n            if (Array.isArray(this[p]) && this[p].length > 0 && this[p][0] instanceof Element) {\n                if (mode === MODE.ADD)\n                    context.commit('characterState/addElements', { property: p, items: this[p] }, { root: true })\n                else if (mode === MODE.SUB)\n                    context.commit('characterState/subElements', { property: p, items: this[p] }, { root: true })\n            }\n            if (Array.isArray(this[p]) && this[p].length > 0 && this[p][0] instanceof Quantity) {\n                if (mode === MODE.ADD)\n                    context.commit('characterState/addQuantities', { property: p, items: this[p] }, { root: true })\n                else if (mode === MODE.SUB)\n                    context.commit('characterState/subQuantities', { property: p, items: this[p] }, { root: true })\n            }\n        }\n    }\n\n    static fromJson(json, type) {\n        const attributes = 'attributes' in json ? json.attributes.map(a => new Quantity(a.name, a.quantity)) : []\n        const masterings = 'masterings' in json ? json.masterings.map(m => new Element(m.name)) : []\n        const saves = 'saves' in json ? json.saves.map(s => new Element(s.name)) : []\n        const features = 'features' in json ? json.features.map(f => new Element(f.name)) : []\n        const items = 'items' in json ? json.items.map(i => new Element(i.name)) : []\n        const skills = 'skills' in json ? json.skills.map(i => new Quantity(i.name, i.quantity)) : []\n        const choices = 'choices' in json ? Choices.fromJson(json.choices) : new Choices([], [], [], [], [])\n        const abilities = 'abilities' in json ? json.abilities.map(a => new Quantity(a.name, a.quantity)) : []\n        const spells = 'spells' in json ? json.spells.map(s => new Element(s.name)) : []\n        return Object.assign(new type(), {\n            key: json.key,\n            name: json.name,\n            attributes,\n            masterings,\n            saves,\n            features,\n            items,\n            skills,\n            choices,\n            abilities,\n            spells\n        });\n    }\n}\n\nexport class Background extends MetaChoice {\n    /**\n     * @returns {Background[]}\n     */\n    static fromJson(json) {\n        return MetaChoice.fromJson(json, Background);\n    }\n}\nexport class Class extends MetaChoice {\n    static fromJson(json) {\n        return MetaChoice.fromJson(json, Class);\n    }\n}\nexport class Race extends MetaChoice {\n    static fromJson(json) {\n        return MetaChoice.fromJson(json, Race);\n    }\n}\n\nexport class SubRace extends MetaChoice {\n    static fromJson(json) {\n        return MetaChoice.fromJson(json, Race);\n    }\n}\n\nexport class MetaChoices {\n    /**\n     * \n     * @param {MetaChoice[]} elements \n     */\n    constructor(elements) {\n        this.elements = elements;\n    }\n\n    static fromJson(json, type) {\n        return new MetaChoices(json.elements.map(c => type.fromJson(c)));\n    }\n}\n\nexport class Backgrounds extends MetaChoices {\n    static fromJson(json) {\n        return MetaChoices.fromJson(json, Background);\n    }\n}\n\nexport class Classes extends MetaChoices {\n    static fromJson(json) {\n        return MetaChoices.fromJson(json, Class);\n    }\n}\n\nexport class Races extends MetaChoices {\n    static fromJson(json) {\n        return MetaChoices.fromJson(json, Race);\n    }\n}\n\nexport class SubRaces extends MetaChoices {\n    static fromJson(json) {\n        return MetaChoices.fromJson(json, SubRace);\n    }\n}\n\nexport class Form3 {\n    /**\n     * @param {string} mode\n     * @param {object} results\n     * @param {object} map\n     */\n    constructor(mode, results, map) {\n        this.mode = mode\n        this.results = results\n        this.map = map\n    }\n}","import json from '@/assets/newApi/classes.json'\nimport { Classes } from '@/api/typeNew.js'\n\nexport const PROTOTYPE = Classes.fromJson(json)['elements'];","import json from '@/assets/newApi/races.json'\nimport { Races } from '@/api/typeNew.js'\n\nexport const PROTOTYPE = Races.fromJson(json)['elements'];","import ENUM from '@/api/enum'\n\nfunction getSkillValueNominal(abilityValue) {\n    const cModifier = Math.floor((abilityValue - 10) / 2)\n    return cModifier\n}\n\nfunction getSkillValueMaitrise(abilityValue, bonusMaitrise) {\n    const cModifier = Math.floor((abilityValue - 10) / 2)\n    return cModifier + bonusMaitrise\n}\n\nfunction getSkillValueExpert(abilityValue, bonusMaitrise) {\n    const cModifier = Math.floor((abilityValue - 10) / 2)\n    return  cModifier + 2 * bonusMaitrise\n}\n\nfunction getSkillValue(abilityKey, abilitiesMap, bonusMaitrise, skillValue) {\n    const abilityValue = abilitiesMap[abilityKey]\n    if (skillValue === 1) {\n        return getSkillValueMaitrise(abilityValue, bonusMaitrise)\n    } else if (skillValue === 2) {\n        return getSkillValueExpert(abilityValue, bonusMaitrise)\n    } else {\n        return getSkillValueNominal(abilityValue)\n    }\n}\n\nexport function getSkillLabels(skillsMap, abilitiesMap, bonusMaitrise) {\n    let skillsLabel = {}\n    for (let key in skillsMap) {\n        const abilityKey = ENUM.SKILLS_ABILITIES[key]\n        const skillValue = getSkillValue(abilityKey, abilitiesMap, bonusMaitrise, skillsMap[key])\n        if (skillsMap[key] == 1)\n            skillsLabel[key] = `☆ (${skillValue})`\n        else if (skillsMap[key] == 2)\n            skillsLabel[key] = `★ (${skillValue})`\n        else if (skillsMap[key] > 2)\n            skillsLabel[key] = `⍟ (${skillValue})`\n        else\n            skillsLabel[key] = `(${skillValue})`\n    }\n    return skillsLabel;\n}","<template>\n    <div class=\"container mt-3\">\n        <div class=\"row\">\n            <div class=\"col-xxl\">\n                <div class=\"input-group mb-3\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Nom du personnage</span>\n                    <input disabled :placeholder=\"characterName\" type=\"text\" class=\"form-control\"\n                        aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>\n            </div>\n            <div class=\"col-xl\">\n                <div class=\"input-group mb-3\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Nom du joueur</span>\n                    <input disabled :placeholder=\"store.getters['characterForm1/playerName']\" type=\"text\" class=\"form-control\"\n                        aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xxl-md\">\n                <div class=\"input-group mb-3\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Race</span>\n                    <input disabled :placeholder=\"raceLabel\" type=\"text\" class=\"form-control\"\n                        aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>\n            </div>\n            <div class=\"col-xxl-md\">\n                <div class=\"input-group mb-3\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Classe</span>\n                    <input disabled :placeholder=\"classeLabel\" type=\"text\" class=\"form-control\"\n                        aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>\n            </div>\n            \n        </div>\n        <div class=\"row\">\n            <div class=\"col-md\">\n                <div class=\"input-group mb-3\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Alignement</span>\n                    <input disabled :placeholder=\"store.getters['characterForm1/alignment']\" type=\"text\" class=\"form-control\"\n                        aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>\n            </div>\n            <div class=\"col-xl\">\n                <div class=\"input-group mb-3\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Histoire</span>\n                    <input disabled :placeholder=\"historicName\" type=\"text\" class=\"form-control\"\n                        aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <div class=\"card border-dark mb-3\">\n                    <div class=\"card-header\">Caractéristiques</div>\n                    <div class=\"card-body\">\n                        <div class=\"card-text\">\n                            <p>Force <span>{{ caracteristicsLabel[ENUM.CARACTERISTICS.FOR] }}</span></p>\n                            <p>Dextérité <span>{{ caracteristicsLabel[ENUM.CARACTERISTICS.DEX]}}</span></p>\n                            <p>Constitution <span>{{ caracteristicsLabel[ENUM.CARACTERISTICS.CON] }}</span></p>\n                            <p>Intelligence <span>{{ caracteristicsLabel[ENUM.CARACTERISTICS.INT] }}</span></p>\n                            <p>Sagesse <span>{{ caracteristicsLabel[ENUM.CARACTERISTICS.SAG]}}</span></p>\n                            <p>Charisme <span>{{ caracteristicsLabel[ENUM.CARACTERISTICS.CHA] }}</span></p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card border-dark mb-3\">\n                    <div class=\"card-header\">Bonus</div>\n                    <div class=\"card-body\">\n                        <div class=\"card-text\">\n                            <p>Maitrise <span>{{ attributs[ENUM.ATTRIBUTES_KEYS.BONUS_MAITRISE] }}</span></p>\n                            <p>Perception passive <span> {{ passiveWisdom }} </span> </p>\n                            <p class=\"text-secondary\">Inspiration</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card border-dark mb-3\">\n                    <div class=\"card-header\">Attributs</div>\n                    <div class=\"card-body\">\n                        <div class=\"card-text\">\n                            <p>Classe d'armure <span>{{ attributs[ENUM.ATTRIBUTES_KEYS.CA] }} </span></p>\n                            <p>Initiative <span>{{ inspiration }} </span></p>\n                            <p>Vitesse <span>{{ attributs[ENUM.ATTRIBUTES_KEYS.SPEED] }} </span></p>\n                            <p>Point de vie <span>{{ attributs[ENUM.ATTRIBUTES_KEYS.LIFE] }} </span></p>\n                            <p class=\"text-secondary\">Point de vie temporaire</p>\n                            <p>Dé de vie <span>{{ attributs[ENUM.ATTRIBUTES_KEYS.LIFE_DICE] }} </span></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col\">\n                <div class=\"card border-dark mb-3\">\n                    <div class=\"card-header\">Compétences</div>\n                    <div class=\"card-body\">\n                        <div class=\"card-text\">\n                            <p :key=\"i\" v-for=\"(s,k,i) in skillsDatas\">{{s[\"name\"]}} <span>{{ skillsLabel[k] }}</span></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col\">\n                <ul class=\"list-group\">\n                <li class=\"list-group-item list-group-item-dark active\">Equipements</li>\n                <li class=\"list-group-item\" v-for=\"(item, index) in items\" :key=\"index\">{{ item }}</li>\n            </ul>\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col\">\n                <ul class=\"list-group\">\n                <li class=\"list-group-item list-group-item-dark active\">Sorts</li>\n                <li class=\"list-group-item\" v-for=\"(spell, index) in spells\" :key=\"index\">{{ spell }}</li>\n            </ul>\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col\">\n                <ul class=\"list-group\">\n                <li class=\"list-group-item list-group-item-dark active\">Capacités</li>\n                <li class=\"list-group-item\" v-for=\"(capacity, index) in capacities\" :key=\"index\">{{ capacity }}</li>\n            </ul>\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col\">\n                <ul class=\"list-group\">\n                <li class=\"list-group-item list-group-item-dark active\">Langues</li>\n                <li class=\"list-group-item\" v-for=\"(language, index) in languages\" :key=\"index\">{{ language }}</li>\n            </ul>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport ENUM from '@/api/enum.js'\nimport skillsModule from '@/api/skills.js'\n\nimport { PROTOTYPE as PROTOTYPE_CLASS }  from '@/api/models/class'\nimport { PROTOTYPE as PROTOTYPE_RACE }  from '@/api/models/race'\nimport * as Utils  from '@/api/utils.js'\n\n\nconst store = useStore();\n\nconst historicName = computed(() => {\n    return store.getters['form4/name']}\n    );\n\nconst characterName = computed(() => store.getters['characterForm1/characterName'])\nconst raceChoices = computed(() => store.getters['form2/raceState'])\nconst raceLabel = computed(\n    () => {\n        if (raceChoices.value.key === 'default')\n            return ''\n\n        console.log(raceChoices.value);\n\n        const raceName = PROTOTYPE_RACE.find(c => c.key == raceChoices.value.key).name\n        const thereIsSubRace = raceChoices.value.choices[\"subRace\"].length > 0 && raceChoices.value.choices[\"subRace\"][0].values.length > 0\n\n        if (!thereIsSubRace)\n            return raceName\n        else {\n            const subRaceName = raceChoices.value.choices[\"subRace\"][0].values[0].name\n            return `${raceName} (${subRaceName})`\n        }   \n    }\n)\n\nfunction computeAbilitiesModifier(value) {\n    return Math.floor((value - 10) / 2)\n}\n\nconst caracteristics = computed(() => store.getters['characterState/caracteristics'])\nconst caracteristicsLabel = computed(() => {\n    let caracteristicsLabel = {}\n    for (let key in caracteristics.value) {\n        caracteristicsLabel[key] = caracteristics.value[key] + ' (' + computeAbilitiesModifier(caracteristics.value[key]) + ')'\n    }\n    return caracteristicsLabel;\n})\nconst attributs = computed(() => store.getters['characterState/attributs'])\n\nconst skillsDatas = skillsModule.getSkills();\n\nconst skills = computed(() => store.getters['characterState/skills'])\nconst skillsLabel = computed(() => Utils.getSkillLabels(skills.value, caracteristics.value, attributs.value[ENUM.ATTRIBUTES_KEYS.BONUS_MAITRISE]))\n\nconst items = computed(() => store.getters['characterState/items'])\nconst spells = computed(() => store.getters['characterState/spells'])\nconst capacities = computed(() => store.getters['characterState/capacities'])\nconst classeChoices = computed(() => store.getters['form2/classState'])\n\nconst classeLabel = computed(\n    () => {\n        if (classeChoices.value.key === 'default')\n            return ''\n\n        const className = PROTOTYPE_CLASS.find(c => c.key == classeChoices.value.key).name\n        const thereIsSubClass = classeChoices.value.choices[\"subClass\"].length > 0\n\n        if (!thereIsSubClass)\n            return className\n        else {\n            const subClassName = classeChoices.value.choices[\"subClass\"][0].name\n            return `${className} ${subClassName}`\n        }   \n    }\n)\n\nconst languages = computed(() => store.getters['characterState/languages'])\n\nconst passiveWisdom = computed(() => {\n    return 10 //+ getSkillValueMaitrise(ENUM.SKILLS.PERCEPTION)\n})\n\nconst inspiration = computed(() => {\n    return computeAbilitiesModifier(caracteristics.value['dex'])\n})\n\n</script>","import script from \"./CharacterFile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CharacterFile.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"my-3 bg-light border rounded border-primary pt-3 px-3\">\n        <div class=\"mb-3 border-start border-primary border-2 ps-3\" v-for=\"(choiceGroup, choiceType, index) in nonEmptyChoices\"\n            :key=\"index\">\n            <h3 class=\"fs-6\">\n                Choix des {{ choiceType }}\n            </h3>\n\n            <div v-for=\"(choice, subIndex) in choiceGroup\" :key=\"`sub-${subIndex}`\">\n                <label class=\"form-label me-3\" for=\"characterName\">\n                    <span class=\"badge rounded-pill text-bg-primary\">\n                        {{ choice.number - localState[choiceType].find(c => c.id == choice.id).values.length }}\n                    </span>\n                </label>\n                <div class=\"form-check form-check-inline\" v-for=\"(value, i) in choice.values\" :key=\"i\">\n                    <input class=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"\"\n                         v-model=\"localState[choiceType].filter(c => c.id == choice.id)[0].values\"\n                        @change=\"checkLimit(localState[choiceType].find(c => c.id == choice.id))\" :value=\"toRaw(value)\">\n                    <label for=\"\">{{ value.name }}</label>\n\n                </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script setup>\n\nimport { ref, defineProps, defineEmits, toRaw, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { Choices } from '@/api/typeNew';\n\n/* eslint-disable no-unused-vars */\nconst store = useStore();\n\nconst props = defineProps(['choices', 'state'])\nconst choices = ref(props.choices)\nconsole.log(\"CHOICES\", props.choices);\n\nconst nonEmptyChoices = computed(() => {\n    const result = {};\n    for (const key in choices.value) {\n        if (Array.isArray(choices.value[key]) && choices.value[key].length > 0) {\n            result[key] = choices.value[key];\n        } else {\n            console.log(\"Remove\", key, \"from\", choices.value);\n        }\n    }\n    return result;\n});\nconsole.log(\"NON-EMPTY CHOICES\", nonEmptyChoices.value);\n\n/* eslint-disable no-unused-vars */\nconst emit = defineEmits(['update:choices'])\n\nconst state = ref(props.state);\nconsole.log(\"STATE\", state.value);\n\nconst localState = ref(JSON.parse(JSON.stringify(state.value)));\n\n// const selectedChoices = ref({})\n\n// for (const key in choices.value) {\n//     for (const subKey in choices.value[key]) {\n//         const refKey = `${key}-${subKey}`\n//         selectedChoices.value[refKey] = ref([])\n//     }\n// }\n\n//console.log(\"init\", selectedChoices.value);\n\nconst checkLimit = (choice) => {\n    if (choice.values.length > choice.number) {\n        choice.values.pop()\n    }\n    console.log(\"CHECKLIMT 1\", localState.value);\n\n    const result = Choices.fromJson(JSON.parse(JSON.stringify(localState.value)))\n\n    console.log(\"CHECKLIMT 2\", result);\n    \n    emit(\"update:choices\", result)\n}\n</script>","import script from \"./SubChoice.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SubChoice.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"row mt-3\">\n        <div class=\"col d-flex justify-content-start\">\n            <button class=\"btn btn-secondary\" @click=\"previous\">Précédent</button>\n        </div>\n        <div class=\"col d-flex justify-content-end\">\n            <button class=\"btn btn-primary\" @click=\"next\">Suivant</button>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { defineEmits } from 'vue'\nconst emit = defineEmits(['next', 'previous'])\nconst next = () => emit('next')\nconst previous = () => emit('previous')\n</script>","import script from \"./FormController.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FormController.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"characterName\">Selection de la race</label>\n        <select class=\"form-select\" @input=\"updateRace\">\n            <option id=\"option-default\" value=\"\">-</option>\n            <option :selected=\"v['key'] == storedRace.key\" :id=\"`option-${v['key']}`\" v-for=\"(v, index) in PROTOTYPE_RACES\"\n                :key=\"index\" :value=\"v['name']\">{{ v[\"name\"] }}</option>\n        </select>\n    </div>\n    <div>\n    <SubChoice v-if=\"isRaceSubChoicesDisplayed\" :choices=\"getRaceChoices()\" :key=\"storedRace.key\"\n            :state=\"storedRace.choices\" @update:choices=\"updateRaceChoices\" />\n    </div>\n    <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"characterName\">Selection de la classe</label>\n        <select class=\"form-select\" @input=\"updateClass\">\n            <option id=\"option-default\" value=\"\">-</option>\n            <option :selected=\"v['key'] == storedClass.key\" :id=\"`option-${v['key']}`\"\n                v-for=\"(v, index) in PROTOTYPE_CLASSES\" :key=\"index\" :value=\"v['name']\">{{ v[\"name\"] }}</option>\n        </select>\n    </div>\n    <div>\n        <SubChoice v-if=\"isClassesubChoicesDisplayed\" :choices=\"getClassChoices()\" :key=\"storedClass.key\"\n        :state=\"storedClass.choices\" @update:choices=\"updateClassChoices\" />\n    </div>\n    <FormController @next=\"emit('next')\" @previous=\"emit('previous')\" />\n</template>\n\n<script setup>\nimport { defineEmits, computed } from 'vue'\nimport { useStore } from 'vuex';\nimport { PROTOTYPE as PROTOTYPE_RACES } from '@/api/models/race.js';\nimport { PROTOTYPE as PROTOTYPE_CLASSES } from '@/api/models/class.js';\nimport SubChoice from './SubChoice.vue';\nimport FormController from './FormController.vue';\n\nconst emit = defineEmits(['next', 'previous'])\n\nconst store = useStore();\n\n// RACE HANDLING\nconst storedRace = computed(() => {\n    return store.getters['form2/raceState']}\n    )\n\nconst isRaceSubChoicesDisplayed = computed(() => {\n    console.log(\"isRaceSubChoicesDisplayed\", storedRace.value.choices)\n    return storedRace.value.key != 'default' && Object.values(storedRace.value.choices).find(c => c.length > 0)\n})\n\nconst getRaceChoices = () => {\n    const isKeyPresent = PROTOTYPE_RACES.find(bg => bg.key == storedRace.value.key)\n    const choices = isKeyPresent ? PROTOTYPE_RACES.find(bg => bg.key == storedRace.value.key).choices : []\n    return choices\n}\n\nconst updateRace = (event) => {\n    store.dispatch('form2/updateRace', event.target.options[event.target.options.selectedIndex].id.split('-')[1])\n}\n\nconst updateRaceChoices = (value) => {\n    store.dispatch('form2/updateRaceChoices', value)\n}\n\n// CLASSE HANDLING\nconst storedClass = computed(() => store.getters['form2/classState'])\n\nconst isClassesubChoicesDisplayed = computed(() => {\n    console.log(\"isClassesubChoicesDisplayed\", storedClass.value.key)\n    return storedClass.value.key != 'default' && Object.values(storedClass.value.choices).find(c => c.length > 0)\n})\n\nconst getClassChoices = () => {\n    const choices = PROTOTYPE_CLASSES.find(bg => bg.key == storedClass.value.key) ? PROTOTYPE_CLASSES.find(bg => bg.key == storedClass.value.key).choices : []\n    return choices\n}\n\nconst updateClass = (event) => {\n    store.dispatch('form2/updateClass', event.target.options[event.target.options.selectedIndex].id.split('-')[1])\n}\n\nconst updateClassChoices = (value) => {\n    store.dispatch('form2/updateClassChoices', value)\n}\n\n</script>","import script from \"./CharacterForm2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CharacterForm2.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import Cookies from 'js-cookie'\n\nconst state = () => {\n    let character = Cookies.get('characterForm1') ? JSON.parse(Cookies.get('characterForm1')) : { characterName: '', playerName: '', alignment: '' };\n    return {\n        characterName : character.characterName,\n        playerName: character.playerName,\n        alignment: character.alignment,\n    };\n}\n\nconst getters = {\n    characterName : (state) => state.characterName,\n    playerName : (state) => state.playerName,\n    alignment : (state) => state.alignment,\n}\n\nconst mutations = {\n    setCharacterName(state, name) {\n        state.characterName = name,\n        Cookies.set('characterForm1', JSON.stringify(state));\n    },\n    setPlayerName(state, name) {\n        state.playerName = name,\n        Cookies.set('characterForm1', JSON.stringify(state));\n    },\n    setAlignment(state, alignment) {\n        state.alignment = alignment,\n        Cookies.set('characterForm1', JSON.stringify(state));\n    },\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters, \n    mutations\n}","import { PROTOTYPE as PROTOTYPE_RACES } from \"@/api/models/race.js\";\nimport { PROTOTYPE as PROTOTYPE_CLASSES } from \"@/api/models/class.js\";\n\nimport { Choices, Race, Class } from \"@/api/typeNew\";\nimport { MODE } from \"@/store/module/utils\";\n\nimport Cookies from 'js-cookie'\n\nconst state = () => {\n    let form2 = Cookies.get('characterForm2') ? JSON.parse(Cookies.get('characterForm2')) : { raceState: { key: 'default', choices: {} }, classState: { key: 'default', choices: [] } };\n    return {\n        raceState : form2.raceState,\n        classState : form2.classState,\n    };\n}\n\nconst getters = {\n    raceState : (state) => state.raceState,\n    classState : (state) => state.classState,\n}\n\nconst mutations = {\n    setRaceStateKey: (state, key) => {\n        state.raceState.key = key;\n        Cookies.set('characterForm2', JSON.stringify(state));\n    },\n    setRaceStateChoices: (state, choices) => {\n        state.raceState.choices = choices;\n        Cookies.set('characterForm2', JSON.stringify(state));\n    },\n    setClassStateKey: (state, key) => {\n        state.classState.key = key;\n        Cookies.set('characterForm2', JSON.stringify(state));\n    },\n    setClassStateChoices: (state, choices) => {\n        state.classState.choices = choices;\n        Cookies.set('characterForm2', JSON.stringify(state));\n    },\n}\n\nconst actions = {\n    updateRace: (context, newKey) => {\n        /* COPY INST : Adapt following part */\n        const PROTOTYPE = PROTOTYPE_RACES\n        const preKey = context.getters['raceState'].key\n        const rootSetKey = 'setRaceStateKey'\n        const rootUpdateChoices = 'updateRaceChoices'\n        \n        const preP = PROTOTYPE.find(bg => bg.key === preKey)\n        const newP = PROTOTYPE.find(bg => bg.key === newKey)\n\n        /* COPY INST : Change class */\n        preP instanceof Race ? preP.digest(context, MODE.SUB) : null\n        newP instanceof Race ? newP.digest(context, MODE.ADD) : null\n        context.commit(rootSetKey, newKey);\n        \n        if (newKey != 'default') {\n            const blankedChoices = newP.choices.getBlanked()\n            context.dispatch(rootUpdateChoices, blankedChoices)\n        } else {\n            context.dispatch(rootUpdateChoices, {})\n        }\n    },\n    updateRaceChoices : (context, newC) => {\n        /* COPY INST : Adapt following part */\n        const rootGetState = 'raceState'\n        const rootSetChoice = 'setRaceStateChoices'\n\n        const preC = context.getters[rootGetState].choices\n        preC instanceof Choices ? preC.digest(context, MODE.SUB) : null\n        newC instanceof Choices ? newC.digest(context, MODE.ADD) : null\n        context.commit(rootSetChoice, newC);\n    },\n    updateClass: (context, newKey) => {\n        /* COPY INST : Adapt following part */\n        const PROTOTYPE = PROTOTYPE_CLASSES\n        const preKey = context.getters['classState'].key\n        const rootSetKey = 'setClassStateKey'\n        const rootUpdateChoices = 'updateClassChoices'\n        \n        const preP = PROTOTYPE.find(bg => bg.key === preKey)\n        const newP = PROTOTYPE.find(bg => bg.key === newKey)\n\n        /* COPY INST : Change class */\n        preP instanceof Class ? preP.digest(context, MODE.SUB) : null\n        newP instanceof Class ? newP.digest(context, MODE.ADD) : null\n        context.commit(rootSetKey, newKey);\n        \n        if (newKey != 'default') {\n            const blankedChoices = newP.choices.getBlanked()\n            context.dispatch(rootUpdateChoices, blankedChoices)\n        } else {\n            context.dispatch(rootUpdateChoices, {})\n        }\n    },\n    updateClassChoices: (context, newC) => {\n        /* COPY INST : Adapt following part */\n        const rootGetState = 'classState'\n        const rootSetChoice = 'setClassStateChoices'\n\n        const preC = context.getters[rootGetState].choices\n        preC instanceof Choices ? preC.digest(context, MODE.SUB) : null\n        newC instanceof Choices ? newC.digest(context, MODE.ADD) : null\n        context.commit(rootSetChoice, newC);\n    },        \n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n}","/* eslint-disable no-unused-vars */\nimport {Element, Quantity} from \"@/api/type.js\"\nimport ENUM from \"@/api/enum.js\";\n\nimport Cookies from 'js-cookie'\n\nconst state = () => {  \n    let characterState = Cookies.get('characterState') ? JSON.parse(Cookies.get('characterState')) : {\n        [ENUM.CARACTERISTICS_KEY] : {\n            [ENUM.CARACTERISTICS.FOR]: 0,\n            [ENUM.CARACTERISTICS.DEX] : 0,\n            [ENUM.CARACTERISTICS.CON] : 0,\n            [ENUM.CARACTERISTICS.INT] : 0,\n            [ENUM.CARACTERISTICS.SAG] : 0,\n            [ENUM.CARACTERISTICS.CHA] : 0\n        },\n        [ENUM.SKILLS_KEY] : {\n            [ENUM.SKILLS.ACROBATICS] : 0,\n            [ENUM.SKILLS.ANIMAL_HANDLING] : 0,\n            [ENUM.SKILLS.ARCANA] : 0,\n            [ENUM.SKILLS.ATHLETICS] : 0,\n            [ENUM.SKILLS.DECEPTION] : 0,\n            [ENUM.SKILLS.HISTORY] : 0,\n            [ENUM.SKILLS.INSIGHT] : 0,\n            [ENUM.SKILLS.INTIMIDATION] : 0,\n            [ENUM.SKILLS.INVESTIGATION] : 0,\n            [ENUM.SKILLS.MEDICINE] : 0,\n            [ENUM.SKILLS.NATURE] : 0,\n            [ENUM.SKILLS.PERCEPTION] : 0,\n            [ENUM.SKILLS.PERFORMANCE] : 0,\n            [ENUM.SKILLS.PERSUASION] : 0,\n            [ENUM.SKILLS.RELIGION] : 0,\n            [ENUM.SKILLS.SLEIGHT_OF_HAND] : 0,\n            [ENUM.SKILLS.STEALTH] : 0,\n            [ENUM.SKILLS.SURVIVAL] : 0,\n        },\n        [ENUM.ATTRIBUTES_KEY] : {\n            [ENUM.ATTRIBUTES_KEYS.CA] : 0,\n            [ENUM.ATTRIBUTES_KEYS.INIT]: 0,\n            [ENUM.ATTRIBUTES_KEYS.SPEED] : 0,\n            [ENUM.ATTRIBUTES_KEYS.LIFE] : 0,\n            [ENUM.ATTRIBUTES_KEYS.TEMP_LIFE] : 0,\n            [ENUM.ATTRIBUTES_KEYS.LIFE_DICE] : 0,\n            [ENUM.ATTRIBUTES_KEYS.BONUS_MAITRISE] : 0,\n        },\n        [ENUM.ITEMS_KEY] : [],\n        [ENUM.SPELLS_KEY] : [],\n        [ENUM.TRAITS_KEY] : [],\n        [ENUM.MAITRISES_KEY] : [],\n        [ENUM.SAVE_KEY] : [],\n        [ENUM.LANGUAGES_KEY] : [],\n        \"sub_class\" : [],\n        \"step\" : 0\n    };\n    return characterState;\n}\n\nconst getters = {\n    state : (state) => state,\n    caracteristics : (state) => state[ENUM.CARACTERISTICS_KEY],\n    skills : (state) => state[ENUM.SKILLS_KEY],\n    attributs : (state) => state[ENUM.ATTRIBUTES_KEY],\n    items : (state) => state.items,\n    spells : (state) => state.spells,\n    capacities : (state) => state[ENUM.TRAITS_KEY],\n    maitrises : (state) => state.maitrises,\n    sauvegardes : (state) => state.sauvegardes,\n    languages : (state) => state.languages,\n    step : (state) => state.step,\n}\n\nconst mutations = {\n    /**\n     * @param {Quantity[]} quantities\n     */\n    addQuantities(state, payload) {\n        if (!(payload.property in state)) {\n            console.error(payload.property, \"not in state\");\n            return;\n        }\n        console.log(\"addQuantities\", payload.property, payload.items);\n        payload.items.forEach(quantity => {\n            state[payload.property][quantity.name] += quantity.quantity\n        })\n        Cookies.set('characterState', JSON.stringify(state));\n    },\n    /**\n     * @param {Quantity[]} quantities\n     */\n    subQuantities(state, payload) {\n        if (!(payload.property in state)) {\n            console.error(payload.property, \"not in state\");\n            return;\n        }\n        console.log(\"subQuantities\", payload.property, payload.items);\n        payload.items.forEach(quantity => {\n            state[payload.property][quantity.name] -= quantity.quantity\n        })\n        Cookies.set('characterState', JSON.stringify(state));\n    },\n    /**\n     * @param {Element[]} elements\n     */\n    addElements(state, payload) {\n        if (!(payload.property in state)) {\n            console.error(payload.property, \"not in state\");\n            return;\n        }\n        if (!Array.isArray(state[payload.property])) {\n            console.error(payload.property, \"is not an array\");\n            return;\n        }\n        console.log(\"addElements\", payload.property, payload.items);\n        payload.items.forEach(element => {\n            state[payload.property].push(element.name)\n        })\n        Cookies.set('characterState', JSON.stringify(state));\n    },\n    /**\n     * @param {Element[]} elements\n     */\n    subElements(state, payload) {\n        if (!(payload.property in state)) {\n            console.error(payload.property, \"not in state\");\n            return;\n        }\n        if (!Array.isArray(state[payload.property])) {\n            console.error(payload.property, \"is not an array\");\n            return;\n        }\n        payload.items.forEach(element => {\n            state[payload.property].splice(state[payload.property].indexOf(element.name), 1)\n        })\n        Cookies.set('characterState', JSON.stringify(state));\n    },\n    setStep(state, step) {\n        state.step = step;\n        Cookies.set('characterState', JSON.stringify(state));\n    },\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations, \n}","import json from '@/assets/newApi/backgrounds.json'\nimport { Backgrounds } from '@/api/typeNew.js'\n\nexport const PROTOTYPE = Backgrounds.fromJson(json)['elements'];","import { PROTOTYPE } from '@/api/models/background'\nimport { MODE } from './utils'\nimport { Background, Choices } from '@/api/typeNew'\n\nimport Cookies from 'js-cookie'\n\nconst state = () => {\n    let characterForm4 = Cookies.get('characterForm4') ? JSON.parse(Cookies.get('characterForm4')) : {\n        historicChoices: {\n            name: 'default',\n            choices: {}\n        }\n    }\n    return {\n        historicChoices: characterForm4.historicChoices\n    }\n} \n\nconst getters = {\n    historicChoices: (state) => state.historicChoices,\n    choices: (state) => state.historicChoices.choices,\n    name: (state) => state.historicChoices.name,\n}\n\nconst mutations = {\n    setHistoricChoicesName: (state, name) => {\n        state.historicChoices.name = name;\n        Cookies.set('characterForm4', JSON.stringify(state));\n    },\n    setHistoricChoicesChoice: (state, historicChoices) => {\n        state.historicChoices.choices = historicChoices;\n        Cookies.set('characterForm4', JSON.stringify(state));\n    },\n}\n\nconst actions = {\n    updateHistoric: (context, background) => {\n        const bgProto = PROTOTYPE\n        const preBg = bgProto.find(bg => bg.key === context.getters['name'])\n        console.log(\"UPDATEHISTORIC\", preBg);\n        const bg = bgProto.find(bg => bg.key === background)\n        preBg instanceof Background ? preBg.digest(context, MODE.SUB) : null\n        bg instanceof Background ? bg.digest(context, MODE.ADD) : null\n        context.commit('setHistoricChoicesName', background);\n        console.log(background);\n        if (background != 'default') {\n            const blankedChoices = bg.choices.getBlanked()\n            context.dispatch('updateHistoricChoices', blankedChoices)\n        } else {\n            context.dispatch('updateHistoricChoices', {})\n        }\n    },\n    updateHistoricChoices: (context, choices) => {\n        context.getters['choices'] instanceof Choices ? context.getters['choices'].digest(context, MODE.SUB) : null\n        choices instanceof Choices ? choices.digest(context, MODE.ADD) : null\n        context.commit('setHistoricChoicesChoice', choices);\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions,\n}","import {Form3, Quantity} from '@/api/typeNew';\nimport ENUM from '@/api/enum';\n\nimport Cookies from 'js-cookie'\n\nconst state = () => {\n    let form3 = Cookies.get('characterForm3') ? JSON.parse(Cookies.get('characterForm3')) : new Form3('', []);\n    return {\n        'form3' : form3,\n    };\n}\n\nconst getters = {\n    form3: (state) => state.form3,\n}\n\nconst mutations = {\n    setForm3: (state, form3) => {\n        state.form3 = form3;\n        Cookies.set('characterForm3', JSON.stringify(state.form3));\n    },\n}\n\nconst actions = {\n    updateForm3: (context, form3) => {\n        // remove previous quantities from chararacterState\n        const preForm3 = context.getters['form3'];\n        console.log(\"updateForm3\", preForm3, form3);\n\n        const preResults = {\n            property : ENUM.CARACTERISTICS_KEY,\n            items : Object.entries(preForm3.results).map(([key,value]) => new Quantity(key, value))\n        }\n        context.commit('characterState/subQuantities', preResults, { root: true });\n        // add new quantities to characterState\n        const newResults = {\n            property : ENUM.CARACTERISTICS_KEY,\n            items : Object.entries(form3.results).map(([key,value]) => new Quantity(key, value))\n        }\n        context.commit('characterState/addQuantities', newResults, { root: true });\n        context.commit('setForm3', form3);\n        console.log(\"updateForm3\", newResults, preResults);\n\n    },\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n}","import { createStore } from \"vuex\";\nimport characterForm1 from \"./module/characterForm1\";\nimport form2 from \"./module/form2\";\nimport characterState from \"./module/characterState\";\nimport form4 from \"./module/form4\";\nimport form3 from \"./module/form3\";\n\nexport default createStore({\n    modules : {\n        characterForm1, \n        form2,\n        characterState,\n        form4,\n        form3\n    }\n})","<template>\n    <div class=\"container border rounded border-primary bg-light  py-2 my-3\">\n        <div class=\"row\">\n            <div class=\"mb-2 col\">\n            <label class=\"form-label\" for=\"selectedGroup15\">{{ abilitiesValues[0] }}</label>\n            <select @change=\"event => updateResults(abilitiesValues[0], event)\" id=\"selectedGroup15\" class=\"form-select\"\n                v-model=\"selectedGroup15\">\n                <template v-for=\"(abilityValue, abilityKey, index) in STUB\" :key=\"index\">\n                    <option :disabled=\"otherSelectedGroupsContainsAbility(abilityKey)\" :value=\"abilityKey\">{{ abilityValue\n                    }}\n                    </option>\n                </template>\n            </select>\n        </div>\n        <div class=\"mb-2 col\">\n            <label class=\"form-label\" for=\"selectedGroup10\"> {{ abilitiesValues[1] }} </label>\n            <select @change=\"event => updateResults(abilitiesValues[1], event)\" id=\"selectedGroup14\" class=\"form-select\"\n                v-model=\"selectedGroup14\">\n                <template v-for=\"(abilityValue, abilityKey, index) in STUB\" :key=\"index\">\n                    <option :disabled=\"otherSelectedGroupsContainsAbility(abilityKey)\" :value=\"abilityKey\">{{ abilityValue\n                    }}\n                    </option>\n                </template>\n            </select>\n        </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"mb-2 col\">\n            <label class=\"form-label\" for=\"selectedGroup10\"> {{ abilitiesValues[2] }} </label>\n            <select @change=\"event => updateResults(abilitiesValues[2], event)\" id=\"selectedGroup13\" class=\"form-select\"\n                v-model=\"selectedGroup13\">\n                <template v-for=\"(abilityValue, abilityKey, index) in STUB\" :key=\"index\">\n                    <option :disabled=\"otherSelectedGroupsContainsAbility(abilityKey)\" :value=\"abilityKey\">{{ abilityValue\n                    }}\n                    </option>\n                </template>\n            </select>\n        </div>\n\n        <div class=\"mb-2 col\">\n            <label class=\"form-label\" for=\"selectedGroup10\"> {{ abilitiesValues[3] }} </label>\n            <select @change=\"event => updateResults(abilitiesValues[3], event)\" id=\"selectedGroup12\" class=\"form-select\"\n                v-model=\"selectedGroup12\">\n                <template v-for=\"(abilityValue, abilityKey, index) in STUB\" :key=\"index\">\n                    <option :disabled=\"otherSelectedGroupsContainsAbility(abilityKey)\" :value=\"abilityKey\">{{ abilityValue\n                    }}\n                    </option>\n                </template>\n            </select>\n        </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"mb-2 col\">\n            <label class=\"form-label\" for=\"selectedGroup10\"> {{ abilitiesValues[4] }} </label>\n            <select @change=\"event => updateResults(abilitiesValues[4], event)\" id=\"selectedGroup10\" class=\"form-select\"\n                v-model=\"selectedGroup10\">\n                <template v-for=\"(abilityValue, abilityKey, index) in STUB\" :key=\"index\">\n                    <option :disabled=\"otherSelectedGroupsContainsAbility(abilityKey)\" :value=\"abilityKey\">{{ abilityValue\n                    }}\n                    </option>\n                </template>\n            </select>\n        </div>\n\n        <div class=\"mb-2 col\">\n            <label class=\"form-label\" for=\"selectedGroup10\"> {{ abilitiesValues[5] }} </label>\n            <select @change=\"event => updateResults(abilitiesValues[5], event)\" id=\"selectedGroup8\" class=\"form-select\"\n                v-model=\"selectedGroup8\">\n                <template v-for=\"(abilityValue, abilityKey, index) in STUB\" :key=\"index\">\n                    <option :disabled=\"otherSelectedGroupsContainsAbility(abilityKey)\" :value=\"abilityKey\">{{ abilityValue\n                    }}\n                    </option>\n                </template>\n            </select>\n        </div>\n        </div>\n    \n        <button class=\"btn btn-outline-danger my-2\" @click=\"resetSelectedGroups\">Reset</button>\n    </div>\n</template>\n\n<script setup>\nimport { computed, defineEmits } from 'vue';\nimport { defineProps } from 'vue';\nimport store from '@/store';\n\nconst emit = defineEmits(['storeForm3']);\n\nconst STUB = {\n    'str': 'Force',\n    'dex': 'Dextérité',\n    'con': 'Constitution',\n    'int': 'Intelligence',\n    'wis': 'Sagesse',\n    'cha': 'Charisme'\n}\n\nconst results = computed(() => {\n    const storedForm3 = store.getters['form3/form3'];\n    console.log(\"RESULTS\", storedForm3);\n    if (storedForm3.mode == 'm-simple') {\n        return JSON.parse(JSON.stringify(storedForm3.results));\n    } else {\n        return {\n            'str': 0,\n            'dex': 0,\n            'con': 0,\n            'int': 0,\n            'wis': 0,\n            'cha': 0\n        }\n    }\n})\n\nconst props = defineProps(['abilitiesValues']);\nconst abilitiesValues = computed(() => {\n    console.log(\"ABILITIESVALUES\", props.abilitiesValues);\n    return props.abilitiesValues\n});\n\nconst selectedGroup15 = computed(() => {\n    console.log(results.value);\n    const entry = Object.entries(results.value).filter((entry) => {\n        console.log(entry);\n        return entry[1] == abilitiesValues.value[0]\n    });\n    console.log(\"SELECTEDGROUP15\", entry);\n    if (entry.length == 0) return '';\n    return entry[0][0]\n});\n\nconst selectedGroup14 = computed(() => {\n    const entry = Object.entries(results.value).filter((entry) => entry[1] == abilitiesValues.value[1]);\n    if (entry.length == 0) return '';\n    return entry[0][0]\n});\n\nconst selectedGroup13 = computed(() => {\n    const entry = Object.entries(results.value).filter((entry) => entry[1] == abilitiesValues.value[2]);\n    if (entry.length == 0) return '';\n    return entry[0][0]\n\n});\n\nconst selectedGroup12 = computed(() => {\n    const entry = Object.entries(results.value).filter((entry) => entry[1] == abilitiesValues.value[3]);\n    if (entry.length == 0) return '';\n    return entry[0][0]\n\n});\n\nconst selectedGroup10 = computed(() => {\n    const entry = Object.entries(results.value).filter((entry) => entry[1] == abilitiesValues.value[4]);\n    if (entry.length == 0) return '';\n    return entry[0][0]\n\n});\n\nconst selectedGroup8 = computed(() => {\n    const entry = Object.entries(results.value).filter((entry) => entry[1] == abilitiesValues.value[5]);\n    if (entry.length == 0) return '';\n    return entry[0][0]\n\n});\n\nconst otherSelectedGroupsContainsAbility = (ability) => {\n    const selectedGroups = [selectedGroup15, selectedGroup14, selectedGroup13, selectedGroup12, selectedGroup10, selectedGroup8];\n    return selectedGroups.filter(sG => sG.value == ability).length > 0\n}\n\nconst resetSelectedGroups = () => {\n    emit('storeForm3', {\n        'str': 0,\n        'dex': 0,\n        'con': 0,\n        'int': 0,\n        'wis': 0,\n        'cha': 0\n    });\n}\n\nconst updateResults = (abilityValue, event) => {\n    // set to 0 abilities with value abilityValue\n    for (const [key, value] of Object.entries(results.value)) {\n        if (value == abilityValue) {\n            results.value[key] = 0;\n        }\n    }\n    console.log(\"updateResults\", abilityValue, event.target.value);\n    results.value[event.target.value] = abilityValue;\n    console.log(results.value);\n    // const map = {\n    //     [abilitiesValues.value[0]] : selectedGroup15.value,\n    //     [abilitiesValues.value[1]] : selectedGroup14.value,\n    //     [abilitiesValues.value[2]] : selectedGroup13.value,\n    //     [abilitiesValues.value[3]] : selectedGroup12.value,\n    //     [abilitiesValues.value[4]] : selectedGroup10.value,\n    //     [abilitiesValues.value[5]] : selectedGroup8.value\n    // }\n    emit('storeForm3', results.value, {});\n}\n\n</script>","import script from \"./SimplifiedForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SimplifiedForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"container bg-light border rounded border-primary py-2 my-3\">\n        <div>\n            <span :class=\"currentPoints > 27 ? 'text-danger' : ''\">{{ currentPoints }} / 27</span>\n        </div>\n\n        <div class=\"my-2\" v-for=\"(aV, aK, aI) in STUB\" :key=\"aI\">\n            <div class=\"d-flex justify-content-between\">\n                <button @click=\"decrement(aK)\" type=\"button\" class=\"btn btn-outline-primary\">-</button>\n                <span>{{ `${aV} (${results[aK]})` }}</span>\n                <button @click=\"increment(aK)\" type=\"button\" class=\"btn btn-outline-primary\">+</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\nimport store from '@/store';\nimport { computed, defineEmits } from 'vue';\n\nconst emit = defineEmits(['storeForm3']);\n\nconst STUB = {\n    'str': 'Force',\n    'dex': 'Dextérité',\n    'con': 'Constitution',\n    'int': 'Intelligence',\n    'wis': 'Sagesse',\n    'cha': 'Charisme'\n}\n\nconst results = computed(() => {\n    const storedForm3 = store.getters['form3/form3'];\n    if (storedForm3.mode == 'm-free') {\n        return JSON.parse(JSON.stringify(storedForm3.results));\n    } else {\n        return {\n            'str': 8,\n            'dex': 8,\n            'con': 8,\n            'int': 8,\n            'wis': 8,\n            'cha': 8\n        }\n    }\n})\n\nconst pointsCost = {\n    8: 0,\n    9: 1,\n    10: 2,\n    11: 3,\n    12: 4,\n    13: 5,\n    14: 7,\n    15: 9\n}\n\nconst currentPoints = computed(() => {\n    let total = 0;\n    for (const value of Object.values(results.value)) {\n        total += pointsCost[value];\n    }\n    return total;\n})\n\nconst increment = (ability) => {\n    if (results.value[ability] < 15) {\n        results.value[ability] += 1;\n    }\n    emit('storeForm3', results.value);\n}\n\nconst decrement = (ability) => {\n    if (results.value[ability] > 8) {\n        results.value[ability] -= 1;\n    }\n    emit('storeForm3', results.value, {});\n}\n\n</script>","import script from \"./FreeForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FreeForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <label class=\"form-label\">Modification des caractéristiques</label>\n\n    <ul class=\"nav nav-pills\">\n        <li class=\"nav-item\">\n            <a id=\"m-simple\" @click=\"event => updateNav(event)\" :class=\"`nav-link ${nav=='m-simple' ? 'active' : ''}`\" href=\"#\">Mode simplifié</a>\n        </li>\n        <li class=\"nav-item\">\n            <a id=\"m-free\" @click=\"event => updateNav(event)\" class=\"nav-link\" :class=\"`nav-link ${nav=='m-free' ? 'active' : ''}`\" href=\"#\">Mode libre</a>\n        </li>\n        <!-- <li class=\"nav-item\">\n            <a id=\"m-classic\" @click=\"event => updateNav(event)\" class=\"nav-link\" :class=\"`nav-link ${nav=='m-classic' ? 'active' : ''}`\" href=\"#\">Mode classique</a>\n        </li> -->\n    </ul>\n    \n    <SimplifiedForm \n    v-if=\"nav=='m-simple'\" \n    :abilitiesValues=\"[15, 14, 13, 12, 10, 8]\"\n    @storeForm3=\"(results, map) => storeForm3(results, map)\"\n    />\n    <FreeForm \n    v-if=\"nav=='m-free'\"\n    @storeForm3=\"(results, map) => storeForm3(results, map)\"\n    />\n    <!-- <ClassicForm \n    v-if=\"nav=='m-classic'\"\n    @storeForm3=\"(results, map) => storeForm3(results, map)\"\n    /> -->\n\n    <FormController @next=\"emit('next')\" @previous=\"emit('previous')\" />\n\n</template>\n\n\n<script setup>\nimport { useStore } from 'vuex';\n/* eslint-disable no-unused-vars */\nimport { defineEmits, computed, ref } from 'vue';\nimport SimplifiedForm from './form3/SimplifiedForm.vue';\nimport FreeForm from './form3/FreeForm.vue';\n//import ClassicForm from './form3/ClassicForm.vue';\nimport {Form3} from '@/api/typeNew'\nimport FormController from './FormController.vue';\n\n\nconst emit = defineEmits(['next', 'previous'])\n\nconst nav = ref('m-simple')\n\nconst updateNav = (event) => {\n    //store.commit('form3/setForm3Mode', event.target.id);\n    nav.value = event.target.id;   \n}   \n\n/* eslint-disable no-unused-vars */\nconst store = useStore();\n\nconst storeForm3 = (results, map) => {    \n    store.dispatch('form3/updateForm3', new Form3(nav.value, results, map))\n}\n\n</script>","import script from \"./CharacterForm3.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CharacterForm3.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","\"<template>\n    <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"characterName\">Selection de l'historique</label>\n        <select class=\"form-select\" @input=\"(event) => store.dispatch('form4/updateHistoric', event.target.options[event.target.options.selectedIndex].id.split('-')[1])\">\n            <option id=\"option-default\" value=\"\">-</option>\n            <option :selected=\"v['key'] == historicChoices.name\" :id=\"`option-${v['key']}`\"  v-for=\"(v, index) in bgProto\" :key=\"index\" :value=\"v['name']\">{{ v[\"name\"] }}</option>\n        </select>\n    </div>\n    <div>\n        <SubChoice\n        v-if=\"historicChoices.name != 'default' && Object.values(store.getters['form4/choices']).find(c => c.length > 0)\"\n        :choices=\"bgProto.find(bg => bg.key == historicChoices.name) ? bgProto.find(bg => bg.key == historicChoices.name).choices : []\"\n        :key=\"historicChoices.name\"\n        :state=\"choices\"\n        @update:choices=\"(value) => updateHistoricChoices(value)\"\n        />\n    </div>\n    <FormController @next=\"emit('next')\" @previous=\"emit('previous')\"/>\n</template>\n\n<script setup>\nimport FormController from './FormController.vue';\nimport { useStore } from 'vuex';\nimport SubChoice from './SubChoice.vue';\nimport { computed, defineEmits} from 'vue';\n\nimport { PROTOTYPE } from '@/api/models/background';\n\nconsole.log(PROTOTYPE);\n\nconst emit = defineEmits(['next', 'previous'])\nconst bgProto = PROTOTYPE;\n\nconst store = useStore();\nconst historicChoices = computed(() =>  store.getters['form4/historicChoices'])\nconst choices = computed(() => store.getters['form4/choices'])\nconst updateHistoricChoices = (value) => {\n    store.dispatch('form4/updateHistoricChoices', value)\n}\n</script>\"","import script from \"./CharacterForm4.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CharacterForm4.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <nav class=\"navbar\" style=\"height: 50px; background-color: #3D5235;\">\n  </nav>\n\n  <img class=\"mx-auto d-block\" src=\"@/assets/header.png\" alt=\"\" srcset=\"\" width=\"100\" style=\"position: relative; bottom: 40px;\">\n\n  <div class=\"container mb-3\">\n      <button class=\"btn btn-outline-danger\" @click=\"clearAllCookies\">Tout supprimer</button>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"progress mb-3\" role=\"progressbar\" aria-label=\"Example 20px high\" :aria-valuenow=\"step / 3 * 100\"\n          aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"height: 20px\">\n          <div class=\"progress-bar\" :style=\"`width: ${step / 3 * 100}%`\"></div>\n        </div>\n        <CharacterForm1 v-if=\"step === 0\" @update:character-name=\"name => display(name)\" @next=\"store.commit('characterState/setStep',step + 1)\" />\n        <CharacterForm2 v-if=\"step === 1\" @update:race=\"race => displayRace(race)\" @next=\"store.commit('characterState/setStep',step+1)\" @previous=\"store.commit('characterState/setStep',step-1)\"\n          @update:classe=\"classe => displayClasse(classe)\" />\n        <CharacterForm3 v-if=\"step === 2\" @next=\"store.commit('characterState/setStep',step +1)\" @previous=\"store.commit('characterState/setStep',step-1)\" />\n        <CharacterForm4 v-if=\"step === 3\" @previous=\"store.commit('characterState/setStep',step-1)\" />\n      </div>\n      <div class=\"col-md-6 ps-md-5 mt-5 mt-md-0\">\n        <div class=\"bg-light border border-dark rounded\" >\n          <CharacterFile :character-name=\"characterName\" :race=\"race\" :caracteristiques=\"caracteristiques\"\n            :competences=\"competences\" :equipements=\"equipements\" :bonus_maitrise=\"bonus_maitrise\" />\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport CharacterForm1 from './components/CharacterForm1.vue';\n\nimport { ref , computed} from 'vue'\nimport CharacterFile from './components/CharacterFile.vue'\nimport CharacterForm2 from './components/CharacterForm2.vue';\nimport CharacterForm3 from './components/CharacterForm3.vue';\nimport CharacterForm4 from './components/CharacterForm4.vue';\nimport data_races from '@/assets/race_lvl1.json'\n\nimport Cookies from 'js-cookie'\n\nimport { useStore, } from 'vuex';\n\nconst caracteristiques = ref({\n  \"force\": 0,\n  \"dexterite\": 0,\n  \"constitution\": 0,\n  \"intelligence\": 0,\n  \"sagesse\": 0,\n  \"charisme\": 0\n})\n\nconst equipements = ref([])\nconst competences = ref({\n  \"Acrobaties\": 0,\n  \"Arnaque\": 0,\n  \"Athlétisme\": 0,\n  \"Discrétion\": 0,\n  \"Dressage\": 0,\n  \"Escamotage\": 0,\n  \"Histoire\": 0,\n  \"Intimidation\": 0,\n  \"Investigation\": 0,\n  \"Médecine\": 0,\n  \"Nature\": 0,\n  \"Perception\": 0,\n  \"Perspicacité\": 0,\n  \"Persuasion\": 0,\n  \"Religion\": 0,\n  \"Représentation\": 0,\n  \"Survie\": 0\n})\n\nconst race = ref('')\nconst classe_payload = {\n  \"classe\": null,\n  \"équipements\": {},\n  \"compétences\": {},\n  \"maitrise\": {},\n  \"sauvegarde\": [],\n  \"capacités\": [],\n  \"bonus_maitrise\": \"\"\n};\n\nconst bonus_maitrise = ref(0);\n\n// TODO add ability to update based on level of character, current is only for level 1\nconst characterName = ref('')\nconst display = (name) => characterName.value = name\n\nconst displayRace = (value) => {\n  // get previous race characteristics and remove them from caracteristiques\n  let characteristics;\n  if (race.value !== '') {\n    characteristics = data_races['race'][race.value]['caractériques'];\n    for (let carac in characteristics) {\n      caracteristiques.value[carac] -= parseInt(characteristics[carac])\n    }\n  }\n  race.value = value\n  characteristics = data_races['race'][value]['caractériques'];\n  for (let carac in characteristics) {\n    caracteristiques.value[carac] += parseInt(characteristics[carac])\n  }\n}\n\nconst store = useStore();\nconsole.log(store.getters['characterState/step']);\nconst step = computed(()=>store.getters['characterState/step']);\n\nconst updateCompetences = (oldCompetences, newCompetences) => {\n  for (let comp in competences.value) {\n    if (oldCompetences[comp] !== undefined && oldCompetences !== null) {\n      competences.value[comp] -= parseInt(oldCompetences[comp]);\n    }\n    if (newCompetences[comp] !== undefined) {\n      competences.value[comp] += parseInt(newCompetences[comp]);\n    }\n  }\n}\n\nconst updateEquipements = (oldEquipements, newEquipements) => {\n  for (let equip in oldEquipements) {\n    if (oldEquipements[equip] !== undefined && oldEquipements !== null) {\n      equipements.value.splice(equipements.value.indexOf(oldEquipements[equip]), 1);\n    }\n  }\n  for (let equip in newEquipements) {\n    if (newEquipements[equip] !== undefined) {\n      equipements.value.push(newEquipements[equip]);\n    }\n  }\n}\n\nconst displayClasse = (new_classe) => {\n  updateCompetences(classe_payload['compétences'], new_classe['compétences']);\n  updateEquipements(classe_payload['équipements'], new_classe['équipements']);\n  classe_payload['compétences'] = JSON.parse(JSON.stringify(new_classe['compétences']));\n  classe_payload['équipements'] = JSON.parse(JSON.stringify(new_classe['équipements']));\n  bonus_maitrise.value = parseInt(new_classe['bonus_maitrise']);\n\n}\n\nconst clearAllCookies = () => {\n  Cookies.remove('characterForm1')\n  Cookies.remove('characterForm2')\n  Cookies.remove('characterForm3')\n  Cookies.remove('characterForm4')\n  Cookies.remove('characterState')\n  location.reload();\n}\n\n</script>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport 'bootstrap/dist/css/main.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport store from './store'\n\nconst app = createApp(App)\napp.use(store)\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/clara/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdnd\"] = self[\"webpackChunkdnd\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2688); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["store","useStore","emit","__emit","next","characterName","computed","getters","updateCharacterName","event","commit","target","value","playerName","updatePlayerName","alignment","updateAlignment","__exports__","CARACTERISTICS_KEY","ATTRIBUTES_KEY","SUB_RACE_KEY","SKILLS_KEY","TRAITS_KEY","LANGUAGES_KEY","SPELLS_KEY","MAITRISES_KEY","ITEMS_KEY","SAVE_KEY","ATTRIBUTES_KEYS","CA","INIT","SPEED","LIFE","TEMP_LIFE","LIFE_DICE","BONUS_MAITRISE","CARACTERISTICS","FOR","DEX","CON","INT","SAG","CHA","ATTRIBUTES","HIT_DICE","SKILLS","ACROBATICS","ANIMAL_HANDLING","ARCANA","ATHLETICS","DECEPTION","HISTORY","INSIGHT","INTIMIDATION","INVESTIGATION","MEDICINE","NATURE","PERCEPTION","PERFORMANCE","PERSUASION","RELIGION","SLEIGHT_OF_HAND","STEALTH","SURVIVAL","SKILLS_ABILITIES","getSkills","skills","getSkillIdByName","name","skill","Object","entries","find","console","log","getCaracteristic","skillId","caracteristic","MODE","ADD","SUB","Element","constructor","this","Quantity","quantity","Choice","id","values","number","Choices","items","subClass","languages","subRace","getBlanked","map","s","digest","context","mode","p","sp","length","property","root","MetaChoice","forEach","v","fromJson","json","SubRace","key","attributes","masterings","saves","features","choices","abilities","spells","Array","isArray","type","a","m","f","i","assign","Background","Class","Race","MetaChoices","elements","c","Backgrounds","Classes","Races","Form3","results","PROTOTYPE","getSkillValueNominal","abilityValue","cModifier","Math","floor","getSkillValueMaitrise","bonusMaitrise","getSkillValueExpert","getSkillValue","abilityKey","abilitiesMap","skillValue","getSkillLabels","skillsMap","skillsLabel","ENUM","historicName","raceChoices","raceLabel","raceName","PROTOTYPE_RACE","thereIsSubRace","subRaceName","computeAbilitiesModifier","caracteristics","caracteristicsLabel","attributs","skillsDatas","skillsModule","Utils","capacities","classeChoices","classeLabel","className","PROTOTYPE_CLASS","thereIsSubClass","subClassName","passiveWisdom","inspiration","props","__props","ref","nonEmptyChoices","result","state","localState","JSON","parse","stringify","checkLimit","choice","pop","previous","storedRace","isRaceSubChoicesDisplayed","getRaceChoices","isKeyPresent","PROTOTYPE_RACES","bg","updateRace","dispatch","options","selectedIndex","split","updateRaceChoices","storedClass","isClassesubChoicesDisplayed","getClassChoices","PROTOTYPE_CLASSES","updateClass","updateClassChoices","character","Cookies","get","mutations","setCharacterName","set","setPlayerName","setAlignment","namespaced","form2","raceState","classState","setRaceStateKey","setRaceStateChoices","setClassStateKey","setClassStateChoices","actions","newKey","preKey","rootSetKey","rootUpdateChoices","preP","newP","blankedChoices","newC","rootGetState","rootSetChoice","preC","characterState","maitrises","sauvegardes","step","addQuantities","payload","error","subQuantities","addElements","element","push","subElements","splice","indexOf","setStep","characterForm4","historicChoices","setHistoricChoicesName","setHistoricChoicesChoice","updateHistoric","background","bgProto","preBg","updateHistoricChoices","form3","setForm3","updateForm3","preForm3","preResults","newResults","createStore","modules","characterForm1","form4","STUB","storedForm3","abilitiesValues","selectedGroup15","entry","filter","selectedGroup14","selectedGroup13","selectedGroup12","selectedGroup10","selectedGroup8","otherSelectedGroupsContainsAbility","ability","selectedGroups","sG","resetSelectedGroups","updateResults","pointsCost","currentPoints","total","increment","decrement","nav","updateNav","storeForm3","caracteristiques","equipements","competences","race","classe_payload","bonus_maitrise","display","displayRace","characteristics","data_races","carac","parseInt","updateCompetences","oldCompetences","newCompetences","comp","undefined","updateEquipements","oldEquipements","newEquipements","equip","displayClasse","new_classe","clearAllCookies","remove","location","reload","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}